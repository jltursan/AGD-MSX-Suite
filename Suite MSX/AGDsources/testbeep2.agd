; Spectrum Next AGD Game Compiler skeleton program
; Jonathan Cauldwell, February 2018

; Define the play area in character/block cells
; Screen is divided into 32 columns and 24 rows (Spectrum and Next/Timex) or 25 rows (CPC)
; The 4 parameters for DEFINEWINDOW are top edge, left edge, height and width respectively

DEFINEWINDOW    1 1 22 30

DEFINEFONT
                0 0 0 0 0 0 0 0
                255 255 255 255 255 255 255 255
                0 108 108 0 0 0 0 0
                0 108 254 108 108 254 108 0
                0 24 126 120 126 30 126 24
                0 230 236 24 48 110 206 0
                0 48 120 48 126 204 126 0
                0 24 48 0 0 0 0 0
                0 12 24 24 24 24 12 0
                0 96 48 48 48 48 96 0
                0 0 60 24 126 24 60 0
                0 0 24 24 126 24 24 0
                0 0 0 0 0 24 24 48
                0 0 0 0 126 0 0 0
                0 0 0 0 0 56 56 0
                0 0 6 12 24 48 96 0
                0 124 206 222 246 230 124 0
                0 56 120 24 24 24 126 0
                0 124 198 6 124 192 254 0
                0 124 198 28 6 198 124 0
                0 24 56 120 216 254 24 0
                0 254 192 252 6 198 124 0
                0 124 192 252 198 198 124 0
                0 254 6 12 24 48 48 0
                0 124 198 124 198 198 124 0
                0 124 198 198 126 6 124 0
                0 0 0 48 0 0 48 0
                0 0 48 0 0 48 48 96
                0 0 12 24 48 24 12 0
                0 0 0 126 0 126 0 0
                0 0 48 24 12 24 48 0
                0 124 198 12 24 0 24 0
                0 124 222 254 254 192 124 0
                0 124 198 198 254 198 198 0
                0 252 198 252 198 198 252 0
                0 124 198 192 192 198 124 0
                0 248 204 198 198 204 248 0
                0 254 192 252 192 192 254 0
                0 254 192 252 192 192 192 0
                0 124 198 192 222 198 124 0
                0 198 198 254 198 198 198 0
                0 126 24 24 24 24 126 0
                0 6 6 6 198 198 124 0
                0 204 216 240 216 204 198 0
                0 192 192 192 192 192 254 0
                0 198 238 254 198 198 198 0
                0 198 230 246 222 206 198 0
                0 124 198 198 198 198 124 0
                0 252 198 198 252 192 192 0
                0 124 198 198 246 222 124 0
                0 252 198 198 252 204 198 0
                0 124 192 124 6 198 124 0
                0 254 48 48 48 48 48 0
                0 198 198 198 198 198 124 0
                0 198 198 198 198 108 56 0
                0 198 198 198 198 254 108 0
                0 198 108 56 56 108 198 0
                0 134 204 120 48 48 48 0
                0 254 12 24 48 96 254 0
                0 30 24 24 24 24 30 0
                0 0 192 96 48 24 12 0
                0 240 48 48 48 48 240 0
                0 48 120 252 48 48 48 0
                0 0 0 0 0 0 0 255
                0 60 102 248 96 96 254 0
                0 0 120 12 124 204 124 0
                0 96 96 124 102 102 124 0
                0 0 60 96 96 96 60 0
                0 12 12 124 204 204 124 0
                0 0 120 204 248 192 124 0
                0 28 48 56 48 48 48 0
                0 0 124 204 204 124 12 120
                0 192 192 248 204 204 204 0
                0 48 0 112 48 48 120 0
                0 12 0 12 12 12 108 56
                0 96 120 112 112 120 108 0
                0 48 48 48 48 48 28 0
                0 0 248 252 252 252 252 0
                0 0 248 204 204 204 204 0
                0 0 120 204 204 204 120 0
                0 0 248 204 204 248 192 192
                0 0 124 204 204 124 12 14
                0 0 60 96 96 96 96 0
                0 0 120 192 120 12 248 0
                0 48 120 48 48 48 28 0
                0 0 204 204 204 204 120 0
                0 0 204 204 120 120 48 0
                0 0 204 252 252 252 120 0
                0 0 204 120 48 120 204 0
                0 0 204 204 204 124 12 120
                0 0 252 24 48 96 252 0
                0 30 24 112 24 24 30 0
                0 24 24 24 24 24 24 0
                0 240 48 28 48 48 240 0
                0 60 120 0 0 0 0 0
                124 198 187 227 227 187 198 124

; Background blocks to be used in the game
; First we define the type - eg EMPTYBLOCK, PLATFORMBLOCK or DEADLYBLOCK
; Next 16 numbers are alternating graphic and attribute bytes from top to bottom

; Block 0

DEFINEBLOCK     EMPTYBLOCK      ; property
                0 0 0 0 0 0 0 0
				$F1 $F1 $F1 $F1 $F1 $F1 $F1 $F1  
; Sprites
; First argument defines the number of frames
; Then 32 bytes for each sprite frame (Spectrum and Timex) or 80 bytes (CPC).

DEFINESPRITE    1		; number of frames
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0         ; Spectrum and Timex.
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

; Screen layouts are best arranged in monospaced rows and columns
; DEFINESCREEN is followed by the block numbers that make up the screen
; Our play area is 22x22, so we need 22 rows of 22 columns
; The compiler will automatically compress screens

DEFINESCREEN
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

; Next we define the sprites that appear on the screen
; SPRITEPOSITION requires 4 numbers for image, type, Y coordinate and X coordinate in that order
; Coordinates are based on Spectrum screen, even for CPC so need to change for conversions

SPRITEPOSITION 66,0,15,88,128


; Define objects
; Spectrum: First number is attribute, then the starting room, next 2 are for Y and X coordinates then 32 for image.
; Timex: First number is the starting room, next 2 are for Y and X coordinates then 32 for image.
; CPC: First number is the starting room, next 2 are for Y and X coordinates then 80 for image.
; Coordinates are based on Spectrum screen, even for CPC so need to change for conversions

; Map.
; First argument is WIDTH, second is the startscreen
; We then arrange the map as a grid with correct width, monospaced here for readability
; where no room is present we put 255

MAP		WIDTH 3
		STARTSCREEN 0
		255 000 255
ENDMAP

; Sprite events

; Player controls
EVENT PLAYER

EVENT SPRITETYPE1

EVENT SPRITETYPE2

EVENT SPRITETYPE3

EVENT SPRITETYPE4

EVENT SPRITETYPE5

EVENT SPRITETYPE6

EVENT SPRITETYPE7

EVENT SPRITETYPE8

EVENT INITSPRITE

EVENT MAINLOOP1
AT 0,3
PRINTMODE1
PRINT "        BEEP TEST         "
PRINTMODE 0

AT 3,3
PRINT "BEEP1  BEEP2  BEEP3  BEEP4"
AT 8,3
PRINT "LEFT=LEFT   RIGHT=RIGHT         UP=COUNT UP DOWN= COUNT DOWN    1,2,3,4     = PLAY BEEP"

AT 4,3
DISPLAY A
PRINT "  "
AT 4,10
DISPLAY B
PRINT "  "
AT 4,17
DISPLAY C
PRINT "  "
AT 4,24
DISPLAY D
PRINT "  "

LET P = S
LET LINE = 5
LET COLUMN = S
PRINT "^"

IF KEY LEFT
  IF S <> 5
    LET COLUMN = S
    PRINT " "
    SUBTRACT 7 FROM S
    LET COLUMN = S
    PRINT "^"
  ENDIF
  DELAY 10
ENDIF

IF KEY RIGHT
  IF S <> 26
    LET COLUMN = S
    PRINT " "
    ADD 7 TO S
    LET COLUMN = S
    PRINT "^"
  ENDIF
  DELAY 10
ENDIF

IF KEY UP
  IF S = 5
    ADD 1 TO A
  ENDIF
  IF S = 12
    ADD 1 TO B
  ENDIF
  IF S = 19
    ADD 1 TO C
  ENDIF
  IF S = 26
    ADD 1 TO D
  ENDIF
ENDIF

IF KEY DOWN
  IF S = 5
    SUBTRACT 1 FROM A
  ENDIF
  IF S = 12
    SUBTRACT 1 FROM B
  ENDIF
  IF S = 19
    SUBTRACT 1 FROM C
  ENDIF
  IF S = 26
    SUBTRACT 1 FROM D
  ENDIF
ENDIF

IF KEY OPTION1
  BEEP A
  DELAY 10
ENDIF
IF KEY OPTION2
  BEEP B
  DELAY 10
ENDIF
IF KEY OPTION3
  BEEP C
  DELAY 10
ENDIF
IF KEY OPTION4
  BEEP D
  DELAY 10
ENDIF

EVENT MAINLOOP2

EVENT INTROMENU
COLOUR $F1
CLS

EVENT GAMEINIT
LET A=30
LET B=60
LET C=90
LET D=120
LET S=5

EVENT RESTARTSCREEN


EVENT FELLTOOFAR

EVENT KILLPLAYER

EVENT LOSTGAME

EVENT COMPLETEDGAME

EVENT NEWHIGHSCORE

EVENT COLLECTBLOCK
